#!/usr/bin/env python3

import os
import argparse
from pathlib import Path

def load_ignore_patterns(file):
    if not file: return []
    return [line.strip() for line in open(file) if line.strip() and not line.startswith('#')]

def should_ignore(path, patterns):
    return any((pat in path) for pat in patterns)

def vomit(root, ignore_file=None):
    ignore_patterns = load_ignore_patterns(ignore_file)
    output_path = Path(root) / "vomit.txt"

    with open(output_path, 'w', encoding='utf-8') as out:
        for dirpath, _, filenames in os.walk(root):
            for fname in filenames:
                full_path = Path(dirpath) / fname
                rel_path = full_path.relative_to(root)

                if rel_path == output_path.relative_to(root):
                    continue
                if should_ignore(str(rel_path), ignore_patterns):
                    continue

                out.write(f"[[[{rel_path}]]]\n")
                try:
                    with open(full_path, 'r', encoding='utf-8') as f:
                        out.write(f.read())
                except:
                    out.write("// [error reading file]\n")
                out.write("\n")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--ignore", help="Path to ignore-pattern file (like .gitignore)")
    args = parser.parse_args()
    print(args)
    vomit(os.getcwd(), args.ignore)
